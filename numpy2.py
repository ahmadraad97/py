# يتم استخدام أمر array  لتحويل ليست الي مصفوفة 
from numpy import *
a=[1,2,3,4,5]
print(array(a))
# [1 2 3 4 5]

# ويمكن عمل مصفوفة ثنائية الابعاد  
a=[[1,2,3],[1,2,3],[1,2,3]]
print(array(a))
# [[1 2 3]
 # [1 2 3]
 # [1 2 3]]

a=array([range(i,i+3)for i in [2,4,6]])
print(a)
# [[2 3 4]
 # [4 5 6]
 # [6 7 8]]


# يمكن عمل تعريف للمتغيرات عقب كتابتها
a = array([('x',3,4.632),('y',4,5.3),('z',5,6.3)],
         dtype =[('name','U5'),('number','i2'),
                   ('value','f4')])
print(a)
# [('x', 3, 4.632) ('y', 4, 5.3  ) ('z', 5, 6.3  )]


# باستخدام امر   empty  يمكن عمل مصفوفة فارغة
a = empty((3,2))
print(a)
# [[5.92878775e-322 4.25014064e+022]
 # [5.97819431e-322 7.01178451e+025]
 # [6.02760088e-322 4.73198470e+030]]


# امر uniform  ياتي بقيمة عشوائية
a=random.uniform(1,2)
print(a)
# 1.5226830706188428
a=random.uniform(1,2,5)
print(a)
# [1.76115247 1.98497872 1.34594588 1.94717648 1.15002188]

# بأمر random.random   يمكن عمل مصفوفة بارقام عشوائية تتراوح بين 0 و 1
a=random.random((2,3))
print(a)
# [[0.26050476 0.57629458 0.51066757]
 # [0.85001836 0.05422654 0.37019148]]


# أمر random.normal  بأتي بالتوزيع الطبيعي لارقام بين الصفر و 1 , عدد 10 ارقام
a=random.normal(0,1,11)
print(a)
# [-0.03537505 -1.0109226   0.25400004 -1.09790629  1.44587177 -0.84551692
  # 0.74117849 -1.12846268  1.44592268 -1.35671888  1.46723931]


# بأمر  random.randint  يمكن تحديد رقم عشوائي صحيح بين 0 و 150
a=random.randint(150)
print(a)
# 29

# و   يمكن تحديد 7 ارقام صحيحة عشوائية من 0 الي 5
a=random.randint(5,size=7)
print(a)
# [2 3 0 1 0 2 1]

# ولو تم كتابة رقمين فتكون الارقام تتراوح بين الرقمين
a=random.randint(0,3,size=7)
print(a)
# [2 0 0 0 0 2 0]

# ويمكن عمل مصفوفة ارقام صحيحة بين 0 و 10
a=random.randint(0,10,(3,2))
print(a)
# [[8 8]
 # [2 8]
 # [9 6]]

# او تلات ابعاد  
a=random.randint(0,10,(3,2,2))
print(a)
# [[[3 8]
  # [0 2]]
#
 # [[9 4]
  # [5 3]]

 # [[2 1]
  # [6 5]]]


# او يتعمل صف ارقام و يتم تشكيلها
a=random.randint(0,10,6)
print(reshape(a,(2,3)))
# [[4 8 0]
 # [3 7 7]]
































