from numpy import *
a=arange(36).reshape(6,6)
print(a)
# [[ 0  1  2  3  4  5]
 # [ 6  7  8  9 10 11]
 # [12 13 14 15 16 17]
 # [18 19 20 21 22 23]
 # [24 25 26 27 28 29]
 # [30 31 32 33 34 35]]
print('-------------------------')

print(a[::2,::3])
# [[ 0  3]
 # [12 15]
 # [24 27]]
print('-------------------------')

print(a[::-1,::-1])
# [[35 34 33 32 31 30]
 # [29 28 27 26 25 24]
 # [23 22 21 20 19 18]
 # [17 16 15 14 13 12]
 # [11 10  9  8  7  6]
 # [ 5  4  3  2  1  0]]
print('-------------------------')

print(a[:2:-1,:3:-1])
# [[35 34]
 # [29 28]
 # [23 22]]
print('-------------------------')

print(a[2::2,3::3])
# [[15]
 # [27]]
print('-------------------------')

# نحسب رقم العنصر كما هو ولا نقف قبله بخطوة
print(a[4:2:-1,5:3:-1])
# [[29 28]
 # [23 22]]
print('-------------------------')

print(a[-1::,-1::])
# [[35]]
print('-------------------------')


# تعديل القيم تغيير القيم يؤثر في الدالة الاصلية
a=arange(16).reshape(4,4)
print(a)
# [[ 0  1  2  3]
 # [ 4  5  6  7]
 # [ 8  9 10 11]
 # [12 13 14 15]]
print('-------------------------')

a[2,3]=0
print(a)
# [[ 0  1  2  3]
 # [ 4  5  6  7]
 # [ 8  9 10  0]
 # [12 13 14 15]]
print('-------------------------')

a[:,3]=0
print(a)
# [[ 0  1  2  0]
 # [ 4  5  6  0]
 # [ 8  9 10  0]
 # [12 13 14  0]]
print('-------------------------')

a[2,:]=0
print(a)
# [[ 0  1  2  0]
 # [ 4  5  6  0]
 # [ 0  0  0  0]
 # [12 13 14  0]]
print('-------------------------')

a[:,:]=0
print(a)
# [[0 0 0 0]
 # [0 0 0 0]
 # [0 0 0 0]
 # [0 0 0 0]]



# النسخة المربوطة
a=arange(16).reshape(4,4)
print(a)
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]
#  [12 13 14 15]]
print('-------------------------')

b=a[: ,0:2]
print(b)
# [[ 0  1]
#  [ 4  5]
#  [ 8  9]
#  [12 13]]
print('-------------------------')

a[:,:]=-1
print(a)
# [[-1 -1 -1 -1]
#  [-1 -1 -1 -1]
#  [-1 -1 -1 -1]
#  [-1 -1 -1 -1]]
print('-------------------------')

print(b)
# [[-1 -1]
 # [-1 -1]
 # [-1 -1]
 # [-1 -1]]
print('-------------------------')


# النسخة المستقلة
a=arange(16).reshape(4,4)
print(a)
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]
#  [12 13 14 15]]
print('-------------------------')
b=a[: ,0:2].copy()
print(b)
# [[ 0  1]
#  [ 4  5]
#  [ 8  9]
#  [12 13]]
print('-------------------------')

a[:,:]=-1
print(a)
# [[-1 -1 -1 -1]
#  [-1 -1 -1 -1]
#  [-1 -1 -1 -1]
#  [-1 -1 -1 -1]]
print('-------------------------')

print(b)
# [[ 0  1]
#  [ 4  5]
#  [ 8  9]
#  [12 13]]
print('-------------------------')



# ثلاثة ابعاد
a =arange(12).reshape(2,3,2)
print(a)
# [[[ 0  1]
#   [ 2  3]
#   [ 4  5]]

#  [[ 6  7]
#   [ 8  9]
#   [10 11]]]
print('-------------------------')

print(a[1])
# [[ 6  7]
#  [ 8  9]
#  [10 11]]
print('-------------------------')

print( a[1,2])
# [10 11]
print('-------------------------')

print( a[1,2,1])
# 11
print('-------------------------')



# التجزيئ
x=[1,2,3,4,5,6,7,8]

x1,x2,x3=split(x,(2,6))
print(x1,x2,x3)
# [1 2] [3 4 5 6] [7 8]
print('-------------------------')

x1,x2,x3=split(x,(1,5))
print(x1,x2,x3)
# [1] [2 3 4 5] [6 7 8]
print('-------------------------')

x1,x2,x3=split(x,(6,2))
print(x1,x2,x3)
# [1 2 3 4 5 6] [] [3 4 5 6 7 8]
print('-------------------------')

x1,x2,x3=split(x,(0,3))
print(x1,x2,x3)
# [] [1 2 3] [4 5 6 7 8]
print('-------------------------')

x1, x2, x3 = split(x, (4, 0))
print(x1, x2, x3)
# [1 2 3 4] [] [1 2 3 4 5 6 7 8]
print('-------------------------')



# تحديد عنصر
a =arange(16).reshape(4,4)
print(a)
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]
#  [12 13 14 15]]
print('-------------------------')

print(a[-1][1])
# 13
print('-------------------------')


# ضم  مصفوفات بشكل عمودي(يجب عدد العواميد يساوي بعض)
a=arange(6).reshape(2,3)
print(a)
# [[0 1 2]
#  [3 4 5]]
print('-------------------------')

b=2*arange(6).reshape(2,3)
print(b)
# [[ 0  2  4]
#  [ 6  8 10]]
print('-------------------------')

print(vstack((a,b)))
# [[ 0  1  2]
#  [ 3  4  5]
#  [ 0  2  4]
#  [ 6  8 10]]
print('-------------------------')

# ضم  مصفوفات بشكل افقي(يجب عدد الصفوف يساوي بعض)
a =arange(4).reshape(2,2)
print(a)
# [[0 1]
#  [2 3]]
print('-------------------------')

b =2*arange(4).reshape(2,2)
print(b)
# [[0 2]
#  [4 6]]
print('-------------------------')

print(hstack((a,b)))
# [[0 1 0 2]
#  [2 3 4 6]]
print('-------------------------')

# زيادة رأسية  , أمر مختلف
a=random.randint(1,10,size=9).reshape(3,3)
print(a)
# [[3 6 6]
#  [4 9 7]
#  [1 4 3]]
print('-------------------------')

b=random.randint(1,10,size=9).reshape(3,3)
print(b)
# [[4 1 5]
#  [8 8 9]
#  [3 4 6]]
print('-------------------------')

print(concatenate([a,b],axis=0))
# [[3 6 6]
#  [4 9 7]
#  [1 4 3]
#  [4 1 5]
#  [8 8 9]
#  [3 4 6]]
print('-------------------------')

# زيادة افقية
a=random.randint(1,10,size=9).reshape(3,3)
print(a)
# [[9 3 7]
#  [8 3 5]
#  [8 7 8]]
print('-------------------------')

b=random.randint(1,10,size=9).reshape(3,3)
# print(b)
# [[6 4 2]
#  [6 9 7]
#  [1 8 6]]
print('-------------------------')

print(concatenate([a,b],axis=1))
# [[9 3 7 6 4 2]
#  [8 3 5 6 9 7]
#  [8 7 8 1 8 6]]
print('-------------------------')

# اكبر و اصغر قيم
a=random.randint(1,10,size=9).reshape(3,3)
print(a)
# [[7 6 3]
#  [4 2 1]
#  [9 3 9]]
print('-------------------------')

print(a.max())
# 9

print(a.min())
# 1

print(a.argmax())
# 6

print(a.argmin())
# 5

# ايجاد الـ Variance و الـ Covariance
a=random.randint(1,10,size=9).reshape(3,3)
print(a)
# [[3 8 1]
#  [4 8 5]
#  [9 8 8]]

print(a.var())
# 7.111111111111111


print(cov(a))
# [[13.          6.5        -0.5       ]
#  [ 6.5         4.33333333 -0.83333333]
#  [-0.5        -0.83333333  0.33333333]]
























