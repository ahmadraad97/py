
# الدوال في نمباي

# يتم استخدامها بأداة fromfunction
from numpy import *
x = fromfunction(lambda i: i**3, (10,))

print(x)
# [  0.   1.   8.  27.  64. 125. 216. 343. 512. 729.]
print('-------------------------')


# بعد واحد
x = fromfunction(lambda i: 3 * (i+5)**3, (10,))

print(x)
# [ 375.  648. 1029. 1536. 2187. 3000. 3993. 5184. 6591. 8232.]
print('-------------------------')

# بعدين
x = fromfunction(lambda i,j: i+j, (4,5))
print(x)
# [[0. 1. 2. 3. 4.]
#  [1. 2. 3. 4. 5.]
#  [2. 3. 4. 5. 6.]
#  [3. 4. 5. 6. 7.]]
print('-------------------------')

x = fromfunction(lambda i,j: 3*i*j, (4,5))
print(x)
# [[ 0.  0.  0.  0.  0.]
#  [ 0.  3.  6.  9. 12.]
#  [ 0.  6. 12. 18. 24.]
#  [ 0.  9. 18. 27. 36.]]
print('-------------------------')

# ثلاث ابعاد
x = fromfunction(lambda i,j,k: i+j+k, (2,3,4))

print(x)
# [[[0. 1. 2. 3.]
#   [1. 2. 3. 4.]
#   [2. 3. 4. 5.]]

#  [[1. 2. 3. 4.]
#   [2. 3. 4. 5.]
#   [3. 4. 5. 6.]]]
print('-------------------------')

x = fromfunction(lambda i,j,k: (2*i)+(j**2)*k, (2,3,4))

print(x)
# [[[ 0.  0.  0.  0.]
#   [ 0.  1.  2.  3.]
#   [ 0.  4.  8. 12.]]

#  [[ 2.  2.  2.  2.]
#   [ 2.  3.  4.  5.]
#   [ 2.  6. 10. 14.]]]
print('-------------------------')


# شكل مختلف
def powers(i):
    i = i**2
    return i
 
x = fromfunction(powers, (6,), dtype=int)
print(x)
# [ 0  1  4  9 16 25]
print('-------------------------')


def powers(i,j):
    i = i**j
    return i


x = fromfunction(powers, (4,5))

print(x)
# [[ 1.  0.  0.  0.  0.]
#  [ 1.  1.  1.  1.  1.]
#  [ 1.  2.  4.  8. 16.]
#  [ 1.  3.  9. 27. 81.]]
print('-------------------------')

m,n = 20, 5

def f(i):
    return (i % n == 0)
x = fromfunction(f, (m,), dtype=int)

print(x)
# [ True False False False False  True False False False False  True False
 # False False False  True False False False False]
print('-------------------------')


# التعامل مع التاريخ


# الصياغة
from numpy import *
a = array('2015-07-04', dtype=datetime64)

print(a)
# 2015-07-04
print('-------------------------')


x = datetime64('2015-07-04')
print(x)
# 2015-07-04
print('-------------------------')




# زيادة ايام
x = datetime64('2015-07-04')
y = x + arange(12)

print(x)
# 2015-07-04
print('-------------------------')
print(y)
# ['2015-07-04' '2015-07-05' '2015-07-06' '2015-07-07' '2015-07-08'
#  '2015-07-09' '2015-07-10' '2015-07-11' '2015-07-12' '2015-07-13'
#  '2015-07-14' '2015-07-15']


# نقص ايام
x = datetime64('2015-07-04')

y = x - arange(12)
print(x)
# 2015-07-04
print('-------------------------')
print(y)
# ['2015-07-04' '2015-07-03' '2015-07-02' '2015-07-01' '2015-06-30'
#  '2015-06-29' '2015-06-28' '2015-06-27' '2015-06-26' '2015-06-25'
#  '2015-06-24' '2015-06-23']
print('-------------------------')

x = datetime64('2015-07-04')

y = x - 12
print(x)
# 2015-07-04
print('-------------------------')
print(y)
# 2015-06-22


# فارق الايام
x = datetime64('2015-07-04')
y = datetime64('2018-09-21')

z = y-x

print(x)
# 2015-07-04
print('-------------------------')
print(y)
# 2018-09-21
print('-------------------------')
print(z)
# 1175 days
























































































